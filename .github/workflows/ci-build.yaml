on:
  push:
    tags:
      - '*'
jobs:
  build-x86_64:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4.1.1
      with:
        clean: false
        submodules: recursive
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update -q -y
        sudo apt-get install -y make gcc g++ python3 python3-dev python3-pip \
           python3-pytest python3-numpy python3-scipy iverilog wget curl \
           default-jre libxrender-dev libxtst-dev libtinfo5 \
           libgtk2.0-0 git \
           zip unzip dfu-util fakeroot u-boot-tools device-tree-compiler mtools \
           bison flex libncurses5-dev libssl-dev bc cpio rsync cmake \
           libgtk-3-0 xz-utils libgmp-dev libmpc-dev bootgen-xlnx
      
    # - name: Checkout
    #   shell: bash
    #   run: |
    #     git clone --recursive --depth 1 https://github.com/F5OEO/plutosdr-fw
    # prog1 & prog2 && fg
    - name: Cache build output
      uses: actions/cache@v2
      id: cache-build
      with:
        # Path of the directory to cache
        path: /home/runner/work/plutosdr-fw/plutosdr-fw/
        # Unique key for the cache
        key: build-${{ github.sha }}

    - name: Build code
      run: |
        if [ -d "/home/runner/work/plutosdr-fw/plutosdr-fw/" ] && [ "$(ls -A /home/runner/work/plutosdr-fw/plutosdr-fw/)" ];
        then 
          echo "Build cache hit"
        else
          echo "Build cache miss - building from scratch"
          # Place your build commands here
        fi
    - name: Build PlutoDatvFirmware
      shell: bash
      run: |
        make -j
        # TARGET=plutoplus make -j 
        # TARGET=e200 make -j 

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: PlutoDVB2_${{  github.ref_name }}
        title: Release ${{  github.ref_name }}
        prerelease: false
        files: |
            Release/**.zip
