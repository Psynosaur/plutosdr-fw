# on:
#   push:
#     tags:
#       - '*'
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      version:
        description: 'Provide release tag, eg. 0.5.4'
        type: string
        required: true
    
env:
  VERSION: ${{ inputs.version }}
jobs:
  build-x86_64:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    environment: plutosdr-fw-ci
    permissions: write-all
    
    steps:
    - uses: actions/checkout@v4.1.1
      with:
        clean: false
        submodules: recursive

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update -q -y
        sudo apt-get install -y make gcc g++ python3 python3-dev python3-pip \
           python3-pytest python3-numpy python3-scipy iverilog wget curl \
           default-jre libxrender-dev libxtst-dev libtinfo5 \
           libgtk2.0-0 git \
           zip unzip dfu-util fakeroot u-boot-tools device-tree-compiler mtools \
           bison flex libncurses5-dev libssl-dev bc cpio rsync cmake \
           libgtk-3-0 xz-utils libgmp-dev libmpc-dev bootgen-xlnx
      
    - name: Cache toolchain
      id: cache-toolchain
      uses: actions/cache@v4
      with:
        # Path of the directory to cache
        path: /home/runner/work/plutosdr-fw/plutosdr-fw/buildroot
        # Unique key for the cache
        key: fw-cache-toolchain
    - name: Cache build
      id: cache-linux
      uses: actions/cache@v4
      with:
        # Path of the directory to cache
        path: /home/runner/work/plutosdr-fw/plutosdr-fw/linux
        # Unique key for the cache
        key: fw-cache-linux
          
    - if: ${{ steps.cache-toolchain.outputs.cache-hit != 'true' }}
      name: Build PlutoDatvFirmware - no cache found
      run: |
        make 
        TARGET=plutoplus make
        TARGET=e200 make 
      env:
        VERSION: ${{ inputs.version }}

    - name: cache found
      run: |
        make 
        TARGET=plutoplus make
        TARGET=e200 make

    # - uses: "marvinpinto/action-automatic-releases@latest"
    #   with:
    #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
    #     automatic_release_tag: PlutoDVB2_$VERSION
    #     title: Release $VERSION
    #     prerelease: false
    #     files: |
    #         plutosdr-fw/Release/**.zip
    #   env:
    #       VERSION: ${{ inputs.version }}
